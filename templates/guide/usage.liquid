{% block styles %}
  {{ "guide.css" | asset_url | stylesheet_tag }}
{% endblock %}

{% block header %}
  {% include "guide/header" %}
{% endblock %}

{% block content %}
<header class="row container">
  <h1>Basic usage</h1>
  <p class="lead">One of the core philosphies behind Live Wires is to stay out of the way as much as possible. We don't want to impose any code standards or force you into a box. Saying that we do have some guidelines that we like that will make it easier to navigate Live Wires.</p>
</header>
<section class="row container">
    <h2>Markup</h2>
    <p>Live Wires uses standard HTML5 for markup with a simplified version of <a href="http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/">BEM syntax</a> to name our classes. This gives us an easy standard for others to quickly adopt and keeps the library tight, modular, and free of specificity issues. Here&rsquo;s the basic syntax:</p>

    <pre class="language-scss"><code>.block {} /* A component or module */
.block__element {} /* A descendent of that module */
.block--modifier {} /* A modified or alternate version of the module */</code></pre>

    <p><a href="http://nicolasgallagher.com/about-html-semantics-front-end-architecture/">Read more</a></p>

    <p>The Mixture version of Live Wires takes advantage of the <a href="http://docs.mixture.io/templates">Liquid templating</a> language for better template construction.</p>

    <h2>CSS</h2>
    <hr>

    <p>All of the styles are written using the SCSS variety of <a href="http://sass-lang.com/">Sass</a>. All files can be found in <code>/source/scss/</code>. We&rsquo;ve written a lot of starter styles to get you going, but encourage you to go through each file and customize to your liking. It's a fine way to design a UI system once you get the hang of it.</p>

    <h3>SCSS file structure</h3>

    <h4><code>~/settings/</code></h4>

    <h5><code>_variables.scss</code></h5>
    <p>Set most global variables in here. You can set things like base typographic settings, default corner radius, breakpoint widths, and grid units in here.</p>

    <h5><code>_color.scss</code></h5>
    <p>We keep our color variables separate so we can easily use multiple color schemes.</p>

    <h5><code>_includes.scss</code></h5>
    <p>Use this to include or exclude the sections you want in your project. We made everything modular, so you should be able to use as much or as little as you like.</p>

    <h5><code>_font-faces.scss</code></h5>
    <p>Add any font or icon @font-face includes to this file.</p>

    <h5><code>_mixins.scss</code> &amp; <code>_functions.scss</code></h5>
    <p>These include powerful enhacements to help save time. Have a browse to see what's available and how they work.</p>


    <h4><code>~/global/</code></h4>
    <p>Stand-alone elements and small peices that make up components. <em>e.g. paragraphs, headings, form fields</em></p>

    <h4><code>~/components/</code></h4>
    <p>The re-usable pieces that consist of groups of HTML elements. <em>e.g. callouts, pagination, code blocks</em></p>

    <h4><code>~/modules/</code></h4>
    <p>Major chunks that make up the main sections of a template. They often contain components and global elements. <em>e.g. headers, footers, layout modules</em></p>

    <h4><code>~/pages/</code></h4>
    <p>Page-specific styles. We recommend keeping these standalone and only calling them on their respective pages.</p>

    <h4><code>~/theme/</code></h4>
    <p>This contains all color-related styles. We&rsquo;ve kept all the color assignments separate from structural styles to make theming easier, faster, and less error prone.</p>

    <h4><code>~/vendor/</code></h4>
    <p>Drop any third-party styles in here. We keep these untouched so they can be updated in the future.</p>

    <h2>Javascript</h2>
    <hr>
    <p>We are using Coffescript to write our javascript. Its a powerful and easy-to-learn javascript pre-processor to help make scripting more efficient and less error-prone.</p>

    <p>Like our CSS and HTML, we try to keeo our javascript modular so you can use only what you need. All the coffeescript components are in <code>/source/coffee/components</code>. You can include and exclude the scripts you want in your project by editing <code>/source/coffee/app.mix.js</code>, following the existing syntax.</p>

    <h3>Third-party scripts</h3>
    <p>We place all third-party scripts like jQuery plugins in the <code>/source/vendor/</code> folder. You can include or exclude the plugins you want to use by editing the <code>vendor.mix.js</code> file in that folder.</p>

    <h2>Helpers</h2>
    <hr>
    <p>We have some handy little helpers to make your life a little easer. Check out <code>/source/scss/global/_helpers.scss</code> for more.</p>

    <h3><code>.hidden</code></h3>

    <p>Hide stuff from screenreaders and browsers.</p>

    <h3><code>.visuallyhidden</code></h3>

    <p>Hide stuff from browsers only.</p>

    <h3><code>.invisible</code></h3>

    <p>Hide but maintain layout</p>

    <h3><code>.pull-right</code></h3>

    <p>Float object to the right.</p>

    <h3><code>.pull-left</code></h3>

    <p>Float object to the left.</p>

    <h3><code>.text--right</code></h3>

    <p>Right-aligned text.</p>

    <h3><code>.text--left</code></h3>

    <p>Left-aligned text.</p>

    <h3><code>.text--center</code></h3>

    <p>Centered text.</p>

    <p>Use the SCSS <code>@extend</code> method on these, like:</p>

    <h3><code>@extend %group;</code></h3>

    <p>Add the <a href="http://nicolasgallagher.com/micro-clearfix-hack/">clearfix hack</a> to containing element. (adding a class of <code>clearfix</code> or <code>group</code> also works but isn&rsuo;t as cool).</p>

    <h3><code>@extend %vertical-align;</code></h3>

    <p>Magically <a href="http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/">verically align</a> objects inside of other objects.</p>

    <h2>Compatibility</h2>
    <p>We support all modern browsers including Internet Explorer 9 and up. Although we advise against it, if you do need to support IE8 or lower, most incompatilibilites can be solved by using jQuery 1.x with the following polyfills:</p>

    <ul>
      <li><a href="https://code.google.com/p/html5shiv/">html5shiv</a></li>
      <li><a href="http://responsejs.com/">Respond.js</a></li>
      <li><a href="https://github.com/chuckcarpenter/REM-unit-polyfill">REM-unit-polyfill</a></li>
      <li><a href="http://selectivizr.com/">Selectivizr</a></li>
    </ul>

    <p>We also use Auto-prefixer to write any necessary vendor prefixes for us. You'll need to adjust the settings in mixture.json for other browsers.</p>

</section>
{% endblock %}