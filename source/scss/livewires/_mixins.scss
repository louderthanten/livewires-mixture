//Setup Variables for Mixins
$root-n: 16;
$root: $root-n * 1px;
$em: $base * 1;

// Mixing for rem-ifying type sizes
@mixin font-size($px_value: $base, $baseline: $line-n) {
	$baseline_rem: ($root-n / 1rem);
	font-size: ($px_value * 1px);
	font-size: $px_value / $baseline_rem;
	line-height: ($baseline / $px_value);
}

// Mixin for hanging speech triangles off of block elements
@mixin cssTriangle($triangleSize, $triangleColor, $triangleDirection) {
	content: "";
	display: block;
	width: 0;
	height: 0;
	border: solid   $triangleSize;
	
	@if ($triangleDirection == top) {
		border-color: $triangleColor transparent transparent transparent;
	}
	@if ($triangleDirection == bottom) {
		border-color: transparent transparent $triangleColor transparent;
	}
	@if ($triangleDirection == left) {
		border-color: transparent transparent transparent $triangleColor;
 	}
	@if ($triangleDirection == right) {
		border-color: transparent $triangleColor transparent transparent;
	}
	// .example { @include css-triangle(5px, #fff, bottom); }
}

// Mixin for converting any px dimension into rems.
@mixin rem($property, $px-values) {
  // Convert the baseline into rems
  $baseline-rem: $root / 1rem;
  // Print the first line in pixel values
  #{$property}: $px-values;
  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem; }
  @else {
    // Create an empty list that we can dump values into
    $rem-values: unquote("");
    @each $value in $px-values {
      // If the value is zero, return 0
      @if $value == 0 {
        $rem-values: append($rem-values, $value); }
      @else {
        $rem-values: append($rem-values, $value / $baseline-rem); } }
    // Return the property and its list of converted values
    #{$property}: $rem-values; }
}

//Gutters
@mixin wrap {
	@include rem(padding-left, $line/2);
	@include rem(padding-right, $line/2);

	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
         -o-box-sizing: border-box;
            box-sizing: border-box;
}